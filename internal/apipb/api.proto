syntax = "proto3";

package api;

message CaptureSnapshotRequest {
  // environment is the name of the environment to capture a snapshot of; the
  // snapshot will include all monitored processes reported by agents configured
  // with this environment. If empty, it refers to agents not configured with
  // any environment.
  string environment = 1;

  // If environment is not set, agent_fingerprint and process_fingerprint must
  // be set; they identify a single process to capture a snapshot by identifying
  // one particular agent and one process monitored by that agent. This is used
  // by the side-eye-go library to capture a snapshot of its own process.
  string agent_fingerprint = 2;
  string process_fingerprint = 3;
}

message CaptureSnapshotResponse {
  int64 snapshot_id = 1;
  string snapshot_url = 2;
  repeated ProcessError errors = 3;
}

message ProcessError {
  string hostname = 1;
  string program = 2;
  int64 pid = 3;
  string error = 4;
}

// The service exposes an interface for capturing snapshots programmatically.
service ApiService {
  rpc CaptureSnapshot(CaptureSnapshotRequest) returns (CaptureSnapshotResponse);
}
