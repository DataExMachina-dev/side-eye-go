// Code generated by "stringer -type=OpCode"; DO NOT EDIT.

package stackmachine

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpCodeInvalid-0]
	_ = x[OpCodeChasePointers-26]
	_ = x[OpCodeCall-1]
	_ = x[OpCodeCondJump-2]
	_ = x[OpCodeDecrement-3]
	_ = x[OpCodeEnqueueEmptyInterface-4]
	_ = x[OpCodeEnqueueInterface-5]
	_ = x[OpCodeEnqueuePointer-6]
	_ = x[OpCodeEnqueueSliceHeader-7]
	_ = x[OpCodeEnqueueStringHeader-8]
	_ = x[OpCodeEnqueueHMapHeader-9]
	_ = x[OpCodeEnqueueSwissMap-31]
	_ = x[OpCodeEnqueueSwissMapGroups-32]
	_ = x[OpCodeEnqueueSubroutine-33]
	_ = x[OpCodeJump-10]
	_ = x[OpCodePop-11]
	_ = x[OpCodePushImm-12]
	_ = x[OpCodePushOffset-13]
	_ = x[OpCodePushSliceLen-14]
	_ = x[OpCodeReturn-15]
	_ = x[OpCodeSetOffset-16]
	_ = x[OpCodeShiftOffset-17]
	_ = x[OpCodeEnqueueBiasedPointer-18]
	_ = x[OpCodeDereferenceCFAOffset-19]
	_ = x[OpCodeCopyFromRegister-20]
	_ = x[OpCodeZeroFill-21]
	_ = x[OpCodeSetPresenceBit-30]
	_ = x[OpCodePrepareFrameData-22]
	_ = x[OpCodeConcludeFrameData-25]
	_ = x[PrepareEventData-24]
	_ = x[OpCodePrepareGoContext-27]
	_ = x[OpCodeTraverseGoContext-28]
	_ = x[OpCodeConcludeGoContext-29]
	_ = x[OpCodeIllegal-23]
}

const _OpCode_name = "OpCodeInvalidOpCodeCallOpCodeCondJumpOpCodeDecrementOpCodeEnqueueEmptyInterfaceOpCodeEnqueueInterfaceOpCodeEnqueuePointerOpCodeEnqueueSliceHeaderOpCodeEnqueueStringHeaderOpCodeEnqueueHMapHeaderOpCodeJumpOpCodePopOpCodePushImmOpCodePushOffsetOpCodePushSliceLenOpCodeReturnOpCodeSetOffsetOpCodeShiftOffsetOpCodeEnqueueBiasedPointerOpCodeDereferenceCFAOffsetOpCodeCopyFromRegisterOpCodeZeroFillOpCodePrepareFrameDataOpCodeIllegalPrepareEventDataOpCodeConcludeFrameDataOpCodeChasePointersOpCodePrepareGoContextOpCodeTraverseGoContextOpCodeConcludeGoContextOpCodeSetPresenceBitOpCodeEnqueueSwissMapOpCodeEnqueueSwissMapGroupsOpCodeEnqueueSubroutine"

var _OpCode_index = [...]uint16{0, 13, 23, 37, 52, 79, 101, 121, 145, 170, 193, 203, 212, 225, 241, 259, 271, 286, 303, 329, 355, 377, 391, 413, 426, 442, 465, 484, 506, 529, 552, 572, 593, 620, 643}

func (i OpCode) String() string {
	if i >= OpCode(len(_OpCode_index)-1) {
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OpCode_name[_OpCode_index[i]:_OpCode_index[i+1]]
}
