// Code generated by "stringer -type=OpCode"; DO NOT EDIT.

package stackmachine

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpCodeInvalid-0]
	_ = x[OpCodeChasePointers-26]
	_ = x[OpCodeCall-1]
	_ = x[OpCodeCondJump-2]
	_ = x[OpCodeDecrement-3]
	_ = x[OpCodeEnqueueEmptyInterface-4]
	_ = x[OpCodeEnqueueInterface-5]
	_ = x[OpCodeEnqueuePointer-6]
	_ = x[OpCodeEnqueueSliceHeader-7]
	_ = x[OpCodeEnqueueStringHeader-8]
	_ = x[OpCodeEnqueueHMapHeader-9]
	_ = x[OpCodeEnqueueSwissMap-31]
	_ = x[OpCodeEnqueueSwissMapGroups-32]
	_ = x[OpCodeEnqueueSubroutine-33]
	_ = x[OpCodeJump-10]
	_ = x[OpCodePop-11]
	_ = x[OpCodePushImm-12]
	_ = x[OpCodePushOffset-13]
	_ = x[OpCodePushSliceLen-14]
	_ = x[OpCodeReturn-15]
	_ = x[OpCodeSetOffset-16]
	_ = x[OpCodeShiftOffset-17]
	_ = x[OpCodeDereferenceCFAOffset-19]
	_ = x[OpCodeCopyFromRegister-20]
	_ = x[OpCodeZeroFill-21]
	_ = x[OpCodeSetPresenceBit-30]
	_ = x[OpCodePrepareFrameData-22]
	_ = x[OpCodeConcludeFrameData-25]
	_ = x[PrepareEventData-24]
	_ = x[OpCodePrepareGoContext-27]
	_ = x[OpCodeTraverseGoContext-28]
	_ = x[OpCodeConcludeGoContext-29]
	_ = x[OpCodeIllegal-23]
}

const (
	_OpCode_name_0 = "OpCodeInvalidOpCodeCallOpCodeCondJumpOpCodeDecrementOpCodeEnqueueEmptyInterfaceOpCodeEnqueueInterfaceOpCodeEnqueuePointerOpCodeEnqueueSliceHeaderOpCodeEnqueueStringHeaderOpCodeEnqueueHMapHeaderOpCodeJumpOpCodePopOpCodePushImmOpCodePushOffsetOpCodePushSliceLenOpCodeReturnOpCodeSetOffsetOpCodeShiftOffset"
	_OpCode_name_1 = "OpCodeDereferenceCFAOffsetOpCodeCopyFromRegisterOpCodeZeroFillOpCodePrepareFrameDataOpCodeIllegalPrepareEventDataOpCodeConcludeFrameDataOpCodeChasePointersOpCodePrepareGoContextOpCodeTraverseGoContextOpCodeConcludeGoContextOpCodeSetPresenceBitOpCodeEnqueueSwissMapOpCodeEnqueueSwissMapGroupsOpCodeEnqueueSubroutine"
)

var (
	_OpCode_index_0 = [...]uint16{0, 13, 23, 37, 52, 79, 101, 121, 145, 170, 193, 203, 212, 225, 241, 259, 271, 286, 303}
	_OpCode_index_1 = [...]uint16{0, 26, 48, 62, 84, 97, 113, 136, 155, 177, 200, 223, 243, 264, 291, 314}
)

func (i OpCode) String() string {
	switch {
	case i <= 17:
		return _OpCode_name_0[_OpCode_index_0[i]:_OpCode_index_0[i+1]]
	case 19 <= i && i <= 33:
		i -= 19
		return _OpCode_name_1[_OpCode_index_1[i]:_OpCode_index_1[i+1]]
	default:
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
