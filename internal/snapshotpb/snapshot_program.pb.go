// This protobuf is used to describe the definition of a snapshot
// program to be executed.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: snapshot_program.proto

package snapshotpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GSchedOffset uint32 `protobuf:"varint,1,opt,name=g_sched_offset,json=gSchedOffset,proto3" json:"g_sched_offset,omitempty"`
	// Offset of pc in g.gobuf from the g.
	GGoBufPcOffset uint32 `protobuf:"varint,2,opt,name=g_go_buf_pc_offset,json=gGoBufPcOffset,proto3" json:"g_go_buf_pc_offset,omitempty"`
	// Offset of bp in g.gobuf from the g.
	GGoBufBpOffset uint32 `protobuf:"varint,3,opt,name=g_go_buf_bp_offset,json=gGoBufBpOffset,proto3" json:"g_go_buf_bp_offset,omitempty"`
	// Offset of syscallpc in the g.
	GSyscallPcOffset uint32 `protobuf:"varint,4,opt,name=g_syscall_pc_offset,json=gSyscallPcOffset,proto3" json:"g_syscall_pc_offset,omitempty"`
	// Offset of syscallsp in the g.
	GSyscallSpOffset uint32 `protobuf:"varint,5,opt,name=g_syscall_sp_offset,json=gSyscallSpOffset,proto3" json:"g_syscall_sp_offset,omitempty"`
	// Offset of goid in the g.
	GGoidOffset uint32 `protobuf:"varint,6,opt,name=g_goid_offset,json=gGoidOffset,proto3" json:"g_goid_offset,omitempty"`
	// Offset of atomicstatus in the g.
	GAtomicstatusOffset uint32 `protobuf:"varint,7,opt,name=g_atomicstatus_offset,json=gAtomicstatusOffset,proto3" json:"g_atomicstatus_offset,omitempty"`
	// Offset of stacktopsp in the g.
	GStktopspOffset uint32 `protobuf:"varint,16,opt,name=g_stktopsp_offset,json=gStktopspOffset,proto3" json:"g_stktopsp_offset,omitempty"`
	// Offset of preemptOff in the m.
	MPreemptOffOffset uint32 `protobuf:"varint,8,opt,name=m_preempt_off_offset,json=mPreemptOffOffset,proto3" json:"m_preempt_off_offset,omitempty"`
	// Address of runtime.firstmoduledata.
	VariableRuntimeDotFirstmoduledata uint64 `protobuf:"varint,9,opt,name=variable_runtime_dot_firstmoduledata,json=variableRuntimeDotFirstmoduledata,proto3" json:"variable_runtime_dot_firstmoduledata,omitempty"`
	// Offset in runtime.moduledata of the types field.
	ModuledataTypesOffset uint32 `protobuf:"varint,10,opt,name=moduledata_types_offset,json=moduledataTypesOffset,proto3" json:"moduledata_types_offset,omitempty"`
	// Offset in runtime.moduledata of the etypes field.
	ModuledataEtypesOffset uint32 `protobuf:"varint,11,opt,name=moduledata_etypes_offset,json=moduledataEtypesOffset,proto3" json:"moduledata_etypes_offset,omitempty"`
	// Offset in runtime.moduledata of the text field.
	ModuledataTextOffset uint32 `protobuf:"varint,14,opt,name=moduledata_text_offset,json=moduledataTextOffset,proto3" json:"moduledata_text_offset,omitempty"`
	DereferenceStartPc   uint64 `protobuf:"varint,12,opt,name=dereference_start_pc,json=dereferenceStartPc,proto3" json:"dereference_start_pc,omitempty"`
	DereferenceEndPc     uint64 `protobuf:"varint,13,opt,name=dereference_end_pc,json=dereferenceEndPc,proto3" json:"dereference_end_pc,omitempty"`
}

func (x *RuntimeConfig) Reset() {
	*x = RuntimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_program_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeConfig) ProtoMessage() {}

func (x *RuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_program_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeConfig.ProtoReflect.Descriptor instead.
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return file_snapshot_program_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeConfig) GetGSchedOffset() uint32 {
	if x != nil {
		return x.GSchedOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGGoBufPcOffset() uint32 {
	if x != nil {
		return x.GGoBufPcOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGGoBufBpOffset() uint32 {
	if x != nil {
		return x.GGoBufBpOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGSyscallPcOffset() uint32 {
	if x != nil {
		return x.GSyscallPcOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGSyscallSpOffset() uint32 {
	if x != nil {
		return x.GSyscallSpOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGGoidOffset() uint32 {
	if x != nil {
		return x.GGoidOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGAtomicstatusOffset() uint32 {
	if x != nil {
		return x.GAtomicstatusOffset
	}
	return 0
}

func (x *RuntimeConfig) GetGStktopspOffset() uint32 {
	if x != nil {
		return x.GStktopspOffset
	}
	return 0
}

func (x *RuntimeConfig) GetMPreemptOffOffset() uint32 {
	if x != nil {
		return x.MPreemptOffOffset
	}
	return 0
}

func (x *RuntimeConfig) GetVariableRuntimeDotFirstmoduledata() uint64 {
	if x != nil {
		return x.VariableRuntimeDotFirstmoduledata
	}
	return 0
}

func (x *RuntimeConfig) GetModuledataTypesOffset() uint32 {
	if x != nil {
		return x.ModuledataTypesOffset
	}
	return 0
}

func (x *RuntimeConfig) GetModuledataEtypesOffset() uint32 {
	if x != nil {
		return x.ModuledataEtypesOffset
	}
	return 0
}

func (x *RuntimeConfig) GetModuledataTextOffset() uint32 {
	if x != nil {
		return x.ModuledataTextOffset
	}
	return 0
}

func (x *RuntimeConfig) GetDereferenceStartPc() uint64 {
	if x != nil {
		return x.DereferenceStartPc
	}
	return 0
}

func (x *RuntimeConfig) GetDereferenceEndPc() uint64 {
	if x != nil {
		return x.DereferenceEndPc
	}
	return 0
}

type PcClassifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetPc []uint64 `protobuf:"varint,1,rep,packed,name=target_pc,json=targetPc,proto3" json:"target_pc,omitempty"`
	ProgPc   []uint32 `protobuf:"varint,2,rep,packed,name=prog_pc,json=progPc,proto3" json:"prog_pc,omitempty"`
}

func (x *PcClassifier) Reset() {
	*x = PcClassifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_program_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PcClassifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PcClassifier) ProtoMessage() {}

func (x *PcClassifier) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_program_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PcClassifier.ProtoReflect.Descriptor instead.
func (*PcClassifier) Descriptor() ([]byte, []int) {
	return file_snapshot_program_proto_rawDescGZIP(), []int{1}
}

func (x *PcClassifier) GetTargetPc() []uint64 {
	if x != nil {
		return x.TargetPc
	}
	return nil
}

func (x *PcClassifier) GetProgPc() []uint32 {
	if x != nil {
		return x.ProgPc
	}
	return nil
}

type TypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnqueuePc uint32 `protobuf:"varint,1,opt,name=enqueue_pc,json=enqueuePc,proto3" json:"enqueue_pc,omitempty"`
	ByteLen   uint32 `protobuf:"varint,2,opt,name=byte_len,json=byteLen,proto3" json:"byte_len,omitempty"`
}

func (x *TypeInfo) Reset() {
	*x = TypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_program_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeInfo) ProtoMessage() {}

func (x *TypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_program_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeInfo.ProtoReflect.Descriptor instead.
func (*TypeInfo) Descriptor() ([]byte, []int) {
	return file_snapshot_program_proto_rawDescGZIP(), []int{2}
}

func (x *TypeInfo) GetEnqueuePc() uint32 {
	if x != nil {
		return x.EnqueuePc
	}
	return 0
}

func (x *TypeInfo) GetByteLen() uint32 {
	if x != nil {
		return x.ByteLen
	}
	return 0
}

type SnapshotProgram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeConfig         *RuntimeConfig       `protobuf:"bytes,1,opt,name=runtime_config,json=runtimeConfig,proto3" json:"runtime_config,omitempty"`
	PcClassifier          *PcClassifier        `protobuf:"bytes,2,opt,name=pc_classifier,json=pcClassifier,proto3" json:"pc_classifier,omitempty"`
	GoRuntimeTypeToTypeId map[uint64]uint32    `protobuf:"bytes,3,rep,name=go_runtime_type_to_type_id,json=goRuntimeTypeToTypeId,proto3" json:"go_runtime_type_to_type_id,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TypeInfo              map[uint32]*TypeInfo `protobuf:"bytes,4,rep,name=type_info,json=typeInfo,proto3" json:"type_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Prog                  []byte               `protobuf:"bytes,5,opt,name=prog,proto3" json:"prog,omitempty"`
}

func (x *SnapshotProgram) Reset() {
	*x = SnapshotProgram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_program_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotProgram) ProtoMessage() {}

func (x *SnapshotProgram) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_program_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotProgram.ProtoReflect.Descriptor instead.
func (*SnapshotProgram) Descriptor() ([]byte, []int) {
	return file_snapshot_program_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotProgram) GetRuntimeConfig() *RuntimeConfig {
	if x != nil {
		return x.RuntimeConfig
	}
	return nil
}

func (x *SnapshotProgram) GetPcClassifier() *PcClassifier {
	if x != nil {
		return x.PcClassifier
	}
	return nil
}

func (x *SnapshotProgram) GetGoRuntimeTypeToTypeId() map[uint64]uint32 {
	if x != nil {
		return x.GoRuntimeTypeToTypeId
	}
	return nil
}

func (x *SnapshotProgram) GetTypeInfo() map[uint32]*TypeInfo {
	if x != nil {
		return x.TypeInfo
	}
	return nil
}

func (x *SnapshotProgram) GetProg() []byte {
	if x != nil {
		return x.Prog
	}
	return nil
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Program *SnapshotProgram `protobuf:"bytes,1,opt,name=program,proto3" json:"program,omitempty"`
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_program_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_program_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_snapshot_program_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotRequest) GetProgram() *SnapshotProgram {
	if x != nil {
		return x.Program
	}
	return nil
}

type SnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *SnapshotResponse) Reset() {
	*x = SnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_program_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotResponse) ProtoMessage() {}

func (x *SnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_program_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotResponse.ProtoReflect.Descriptor instead.
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return file_snapshot_program_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

var File_snapshot_program_proto protoreflect.FileDescriptor

var file_snapshot_program_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0xff, 0x05, 0x0a, 0x0d, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x0a, 0x0e,
	0x67, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x2a, 0x0a, 0x12, 0x67, 0x5f, 0x67, 0x6f, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x70,
	0x63, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x67, 0x47, 0x6f, 0x42, 0x75, 0x66, 0x50, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a,
	0x0a, 0x12, 0x67, 0x5f, 0x67, 0x6f, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x62, 0x70, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x67, 0x47, 0x6f, 0x42,
	0x75, 0x66, 0x42, 0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x67, 0x5f,
	0x73, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c,
	0x6c, 0x50, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x67, 0x5f, 0x73,
	0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c,
	0x53, 0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x5f, 0x67, 0x6f,
	0x69, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x67, 0x47, 0x6f, 0x69, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x67, 0x5f, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x67, 0x41, 0x74,
	0x6f, 0x6d, 0x69, 0x63, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x67, 0x5f, 0x73, 0x74, 0x6b, 0x74, 0x6f, 0x70, 0x73, 0x70, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x53, 0x74,
	0x6b, 0x74, 0x6f, 0x70, 0x73, 0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x14,
	0x6d, 0x5f, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x50, 0x72, 0x65,
	0x65, 0x6d, 0x70, 0x74, 0x4f, 0x66, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x4f, 0x0a,
	0x24, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x64, 0x6f, 0x74, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x21, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x6f, 0x74, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36,
	0x0a, 0x17, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x74, 0x79, 0x70, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x34, 0x0a, 0x16, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x54, 0x65, 0x78, 0x74,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x63, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x64, 0x65, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x63, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64, 0x65, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x45, 0x6e, 0x64, 0x50, 0x63, 0x4a, 0x04, 0x08, 0x0f, 0x10, 0x10, 0x22, 0x44, 0x0a, 0x0c,
	0x50, 0x63, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x67, 0x5f, 0x70, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x67,
	0x50, 0x63, 0x22, 0x44, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x63, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x62, 0x79, 0x74, 0x65, 0x4c, 0x65, 0x6e, 0x22, 0x9c, 0x04, 0x0a, 0x0f, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x46, 0x0a, 0x0e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x63, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x50,
	0x63, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c, 0x70, 0x63, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x1a, 0x67, 0x6f, 0x5f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x6f, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2e, 0x47, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x67, 0x6f, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x4c, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x70, 0x72, 0x6f, 0x67, 0x1a, 0x48, 0x0a, 0x1a, 0x47, 0x6f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x57,
	0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x32, 0x6b, 0x0a, 0x16, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a,
	0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snapshot_program_proto_rawDescOnce sync.Once
	file_snapshot_program_proto_rawDescData = file_snapshot_program_proto_rawDesc
)

func file_snapshot_program_proto_rawDescGZIP() []byte {
	file_snapshot_program_proto_rawDescOnce.Do(func() {
		file_snapshot_program_proto_rawDescData = protoimpl.X.CompressGZIP(file_snapshot_program_proto_rawDescData)
	})
	return file_snapshot_program_proto_rawDescData
}

var file_snapshot_program_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_snapshot_program_proto_goTypes = []interface{}{
	(*RuntimeConfig)(nil),    // 0: snapshot_program.RuntimeConfig
	(*PcClassifier)(nil),     // 1: snapshot_program.PcClassifier
	(*TypeInfo)(nil),         // 2: snapshot_program.TypeInfo
	(*SnapshotProgram)(nil),  // 3: snapshot_program.SnapshotProgram
	(*SnapshotRequest)(nil),  // 4: snapshot_program.SnapshotRequest
	(*SnapshotResponse)(nil), // 5: snapshot_program.SnapshotResponse
	nil,                      // 6: snapshot_program.SnapshotProgram.GoRuntimeTypeToTypeIdEntry
	nil,                      // 7: snapshot_program.SnapshotProgram.TypeInfoEntry
}
var file_snapshot_program_proto_depIdxs = []int32{
	0, // 0: snapshot_program.SnapshotProgram.runtime_config:type_name -> snapshot_program.RuntimeConfig
	1, // 1: snapshot_program.SnapshotProgram.pc_classifier:type_name -> snapshot_program.PcClassifier
	6, // 2: snapshot_program.SnapshotProgram.go_runtime_type_to_type_id:type_name -> snapshot_program.SnapshotProgram.GoRuntimeTypeToTypeIdEntry
	7, // 3: snapshot_program.SnapshotProgram.type_info:type_name -> snapshot_program.SnapshotProgram.TypeInfoEntry
	3, // 4: snapshot_program.SnapshotRequest.program:type_name -> snapshot_program.SnapshotProgram
	2, // 5: snapshot_program.SnapshotProgram.TypeInfoEntry.value:type_name -> snapshot_program.TypeInfo
	4, // 6: snapshot_program.SnapshotProgramService.Snapshot:input_type -> snapshot_program.SnapshotRequest
	5, // 7: snapshot_program.SnapshotProgramService.Snapshot:output_type -> snapshot_program.SnapshotResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_snapshot_program_proto_init() }
func file_snapshot_program_proto_init() {
	if File_snapshot_program_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snapshot_program_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_program_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PcClassifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_program_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_program_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotProgram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_program_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_program_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snapshot_program_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_snapshot_program_proto_goTypes,
		DependencyIndexes: file_snapshot_program_proto_depIdxs,
		MessageInfos:      file_snapshot_program_proto_msgTypes,
	}.Build()
	File_snapshot_program_proto = out.File
	file_snapshot_program_proto_rawDesc = nil
	file_snapshot_program_proto_goTypes = nil
	file_snapshot_program_proto_depIdxs = nil
}
